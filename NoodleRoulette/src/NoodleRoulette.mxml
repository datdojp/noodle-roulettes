<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="965" height="400"
				styleName="background" applicationComplete="init()">
	<mx:Style source="assets/style.css"/>
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Image;
			
			var itemManager:ItemManager = new ItemManager();
			
			var frontBeltEllipse:Ellipse = new Ellipse();
			var backBeltEllipse:Ellipse = new Ellipse();
			var dummyBeltEllipse:Ellipse = new Ellipse();
			
			var itemsInFrontBelt:ArrayCollection = new ArrayCollection();
			var itemsInBackBelt:ArrayCollection = new ArrayCollection();
			
			public static var instance:NoodleRoulette;
			
			function init() {
				instance = this;
				
				this.frontBeltEllipse.center = new Point(gamePlayArea.width / 2, gamePlayArea.height / 2);
				this.frontBeltEllipse.a = gamePlayArea.width / 2 + 200;
				this.frontBeltEllipse.b = 140;
				
				this.backBeltEllipse.center = new Point(gamePlayArea.width / 2, gamePlayArea.height / 2);
				this.backBeltEllipse.a = gamePlayArea.width / 2 + 100;
				this.backBeltEllipse.b = 40;
				
				this.dummyBeltEllipse.center = new Point(gamePlayArea.width / 2, gamePlayArea.height / 2 + 50);
				this.dummyBeltEllipse.a = this.backBeltEllipse.a;
				this.dummyBeltEllipse.b = this.backBeltEllipse.b;
				
				startRoullete();
			}
			
			function startRoullete():void {
				var mainTimer:Timer = new Timer(10, 0);
				mainTimer.addEventListener(TimerEvent.TIMER, onTimer);
				mainTimer.start();
			}
			
			var lastDummyItem;
			function onTimer(event:TimerEvent) {
				//handle back belt
				if (itemsInFrontBelt.length > 0) {
					var firstItem:Item = itemsInFrontBelt.getItemAt(0) as Item;
					if (!firstItem.isUsed()) {
						itemsInFrontBelt.removeItemAt(0);
						itemsInBackBelt.addItem(firstItem);
						initForBackBelt(firstItem.moveEffect);
						firstItem.moveEffect.start();
					}
				}
				
				//handle front belt
				var needNewItem:Boolean = false;
				if (itemsInFrontBelt.length == 0) {
					needNewItem = true;
				} else {
					var lastItem:Item = itemsInFrontBelt.getItemAt(itemsInFrontBelt.length - 1) as Item;
					if (Math.abs(lastItem.moveEffect.x - lastItem.moveEffect.fromX) > 100) {
						needNewItem = true;
					}
				}

				if (needNewItem) {
					var item:Item = itemManager.allocateItem(getRandomIdx());
					gamePlayArea.addChild(item.image);
					itemsInFrontBelt.addItem(item);
					initForFrontBelt(item.moveEffect);
					item.moveEffect.start();
				}
				
				//handle dummy belt
				needNewItem = false;
				if (lastDummyItem == null || Math.abs(lastDummyItem.moveEffect.x - lastDummyItem.moveEffect.fromX) > 100) {
					var dummyItem:Item = itemManager.allocateItem(getRandomIdx());
					gamePlayArea.addChild(dummyItem.image);
					lastDummyItem = dummyItem;
					initForDummyBelt(dummyItem.moveEffect);
					dummyItem.moveEffect.start();
				}
			}
			
			public function getRandomIdx():int {
				return Math.floor(Math.random() * 10);
			}
			
			public function initForFrontBelt(ellipseMove:EllipseMove):EllipseMove {
				return ellipseMove.init(ellipseMove.move.target, frontBeltEllipse.center, 
					frontBeltEllipse.a, frontBeltEllipse.b, 
					-frontBeltEllipse.a, frontBeltEllipse.a);
			}
			
			public function initForBackBelt(ellipseMove:EllipseMove):EllipseMove {
				return ellipseMove.init(ellipseMove.move.target, backBeltEllipse.center, 
					backBeltEllipse.a, backBeltEllipse.b, 
					backBeltEllipse.a, -backBeltEllipse.a,
					true);
			}
			
			public function initForDummyBelt(ellipseMove:EllipseMove):EllipseMove {
				return ellipseMove.init(ellipseMove.move.target, dummyBeltEllipse.center, 
					dummyBeltEllipse.a, dummyBeltEllipse.b, 
					-dummyBeltEllipse.a, dummyBeltEllipse.a,
					true, true);
			}
			
			public function outDebug(content:String) {
				this.debug.text = content;
			}
		]]>
	</mx:Script>
	
	<mx:Canvas id="gamePlayArea" x="18" y="9" width="704" height="383" 
			   horizontalScrollPolicy="off" verticalScrollPolicy="off">
	</mx:Canvas>
	
	<mx:Label id="debug" x="760" y="39" text="Label"/>
	
	<mx:Image source="@Embed(source='assets/girls.png')" x="250" y="110"/>
	
</mx:Application>
