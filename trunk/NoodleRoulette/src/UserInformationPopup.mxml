<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="965" height="400"
		   styleName="backgroundSubmit" xmlns:local="*">
	<mx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.adobe.utils.IntUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			public var citiesData:ArrayCollection = new ArrayCollection(
				[ {label:"-Chọn-", data:0},
					{label:"Hà Nội", data:1},
					{label:"Hải Phòng", data:2},
					{label:"Đà Nẵng", data:3},
					{label:"Nha Trang", data:4},
					{label:"Hồ Chí Minh", data:5},
					{label:"Cần Thơ", data:6}
					 ]);
			
			const dobHint:String = "DD/MM/YYYY, ví dụ: 19/03/1986";
			
			function dobFocusIn() {
				if (dob.text == dobHint) {
					dob.text = "";
				}
			}
			function dobFocusOut() {
				if (isEmpty(dob.text)) {
					dob.text = dobHint;
				}
			}
			
			function finishSendResult(event:ResultEvent) {
				var JSONResArr:String = String(httpSendResult.lastResult);	
				var result:Object = JSON.decode(JSONResArr);
				if (result.result == null) {
					Alert.show(result.error);
					return;
				} else {
					Application.application.addHighscoreList();
					Application.application.updateHighscoreList();
					PopUpManager.removePopUp(this);
				}
			}
			
			function finishGetUserInfo(event:ResultEvent) {
				var JSONResArr:String = String(httpGetUserInfo.lastResult);
				if (JSONResArr != null && JSONResArr.length > 0) {
					var result:Object = JSON.decode(JSONResArr);
					if (result.error != null) {
						idCarNo.text = "";
						phone.text = "";
						address.text = "";
						dob.text = dobHint;
						cities.selectedIndex = 0;
						email.text = "";
						return;	
					}
					idCarNo.text = result[0].cmnd;
					phone.text = result[0].phone;
					address.text = result[0].address;
					dob.text = result[0].dob;
					for (var i = 0; i < citiesData.length; i++) {
						if (citiesData.getItemAt(i).label == result[0].city) {
							cities.selectedIndex = i;
							break;
						}
					}
					email.text = result[0].email;
				}
				else {
					idCarNo.text = "";
					phone.text = "";
					address.text = "";
					dob.text = dobHint;
					cities.selectedIndex = 0;
					email.text = "";
				}
			}
			
			function isDigitString(input:String):Boolean {
				if (input == null || input.length == 0) {
					return false;
				}
				
				for(var i = 0; i < input.length; i++) {
					var temp:Number = parseInt(input.substr(i, 1));
					if (isNaN(temp)) {
						return false;
					}
				}
				
				return true;
			}
			
			function isDDMMYYYY(input:String):Boolean {
				if (input == null || input.length == 0) return false;
				
				var splitted:Array = input.split("/");
				if (splitted.length != 3) return false;
				
				if (splitted[0].length != 2 || splitted[1].length != 2 || splitted[2].length != 4) return false;
				
				if (!isDigitString(splitted[0]) || !isDigitString(splitted[1]) || !isDigitString(splitted[2])) return false;
				
				var dd = parseInt(splitted[0]);
				var mm = parseInt(splitted[1]);
				var yyyy = parseInt(splitted[2]);
				
				var date:Date = new Date(yyyy, mm, dd);
				if (date == null) return false;
				
				return true;
			}
			
			function isEmail(input:String):Boolean {
				var pattern:RegExp = /^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/;
				return pattern.test(input.toLowerCase());
			}
			
			function validate():Boolean {
				//name
				if(isEmpty(txtName.text)) {
					alertMissingField("Họ và tên");
					txtName.setFocus();
					return false;
				}
				
				//CMND
				if (isEmpty(idCarNo.text)) {
					alertMissingField("CMND");
					idCarNo.setFocus();
					return false;
				}
				if (!isDigitString(idCarNo.text)) {
					Alert.show("CMND phải là chuỗi số 0-9");
					idCarNo.setFocus();
					return false;
				}
				
				//dob
				if (isEmpty(dob.text) || dob.text == dobHint) {
					alertMissingField("Ngày sinh");
					dob.setFocus();
					return false;
				}
				if (!isDDMMYYYY(dob.text)) {
					Alert.show("Ngày sinh không đúng định dạng");
					dob.setFocus();
					return false;
				}
				
				//phone
				if (isEmpty(phone.text)) {
					alertMissingField("Điện thoại");
					phone.setFocus();
					return false;
				}
				if (!isDigitString(phone.text)) {
					Alert.show("Số điện thoại phải là chuỗi số 0-9");
					phone.setFocus();
					return false;
				}
				
				//address
				if (isEmpty(address.text)) {
					alertMissingField("Địa chỉ");
					address.setFocus();
					return false;
				}
				
				//city
				if (cities.selectedItem.data == 0) {
					alertMissingField("Thành phố");
					cities.setFocus();
					return false;
				}
				
				//email
				if (isEmpty(email.text)) {
					alertMissingField("Email");
					email.setFocus();
					return false;
				}
				if (!isEmail(email.text)) {
					Alert.show('Email không đúng định dạng');
					email.setFocus();
					return false;
				}
				
				//agree term
				if (!agreeTerm.selected) {
					Alert.show("Bạn phải đồng ý với mọi điều khoản của chương trình");
					return false;
				}
				
				return true;
			}
			
			function isEmpty(str:String) {
				return str == null || str.length == 0;
			}
			
			function alertMissingField(field:String) {
				Alert.show("Hãy điền vào ô \"" + field + "\"");
			}
			
			function onSendButtonClicked() {
				if (!validate()) return;
				
				var params:Object = new Object();
				params.a = "post";
				params.fullname = txtName.text;
				params.cmnd = idCarNo.text;
				params.dob = dob.text;
				params.phone = phone.text;
				params.address = address.text;
				params.city = citiesData.getItemAt(cities.selectedIndex).label;
				params.email = email.text;
				params.score = encrypt(Application.application.totalScore);
				httpSendResult.send(params);
				
//				PopUpManager.removePopUp(this);
			}
			
			function encrypt(score:int):Number {
				return score * score * 47
			}
			
			function autoComplete() {
				if (txtName.text == null || txtName.text.length == 0) return;
				
				var params = new Object();
				params.a = "get";
				params.fullname = txtName.text;
				httpGetUserInfo.send(params);
			}
			
		
		]]>
	</mx:Script>
	<mx:Canvas styleName="textbox1" x="265" y="119" width="298" height="30">
		<mx:TextInput id="txtName" focusOut="{autoComplete();}" 
					  borderSkin="{null}" backgroundAlpha="0" themeColor="#ffffff"
					  width="286" height="18" x="6" y="6" />
	</mx:Canvas>
	<mx:Canvas styleName="textbox1" x="265" y="152" width="298" height="30">
		<mx:TextInput id="idCarNo" 
					  borderSkin="{null}" backgroundAlpha="0" themeColor="#ffffff"
					  width="286" height="18" x="6" y="6" />
	</mx:Canvas>
	<mx:Canvas styleName="textbox3" x="265" y="185" width="224" height="30">
		<mx:TextInput id="dob" 
					  borderSkin="{null}" backgroundAlpha="0" themeColor="#ffffff"
					  width="212" height="18" x="6" y="6"
					  text="{dobHint}"
					  focusIn="dobFocusIn()"
					  focusOut="dobFocusOut()"
					  />
	</mx:Canvas>
	<mx:Canvas styleName="textbox1" x="265" y="218" width="298" height="30">
		<mx:TextInput id="phone"
					  borderSkin="{null}" backgroundAlpha="0" themeColor="#ffffff"
					  width="286" height="18" x="6" y="6" />
	</mx:Canvas>
	<mx:Canvas styleName="combobox" x="265" y="251" width="103" height="30" horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:ComboBox id="cities" dataProvider="{citiesData}"
					 themeColor="#ffffff" fillAlphas="[0,0]" fillColors="[#ffffff, #ffffff]"
					 width="91" height="18" x="6" y="6" />
		<mx:Image source="@Embed(source='assets/combobox_arrow.png')" x="81" y="10"/>
	</mx:Canvas>
	<mx:Canvas styleName="textbox2" x="423" y="251" width="142" height="30">
		<mx:TextInput id="address"
					  borderSkin="{null}" backgroundAlpha="0" themeColor="#ffffff"
					  width="130" height="18" x="6" y="6" />
	</mx:Canvas>
	<mx:Canvas styleName="textbox3" x="265" y="284" width="224" height="30">
		<mx:TextInput id="email"
					 borderSkin="{null}" backgroundAlpha="0" themeColor="#ffffff"
					 width="212" height="18" x="6" y="6" />
	</mx:Canvas>
	
	<local:NoCachingHttpService
		id="httpSendResult"
		url="http://mekongmedia.com.vn/reeva3mien/info.php"
		method="POST"
		resultFormat="object"
		result="finishSendResult(event)"
		/>
	<local:NoCachingHttpService
		id="httpGetUserInfo"
		url="http://mekongmedia.com.vn/reeva3mien/info.php"
		method="GET"
		resultFormat="object"
		result="finishGetUserInfo(event)"
		/>
	<mx:Image source="@Embed(source='assets/but_ok.png')" x="554" y="291" click="onSendButtonClicked()"
			  useHandCursor="true" buttonMode="true"/>
	<mx:CheckBox id="agreeTerm" label="Tôi đã đọc và đồng ý với mọi điều khoản chương trình"
				 styleName="agreeTerm" x="165" y="310"/>
	
</mx:Canvas>
